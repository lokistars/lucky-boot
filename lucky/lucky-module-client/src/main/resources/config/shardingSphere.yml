spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0: !!org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.1.9:3306/lucky?useUnicode=true&characterEncoding=utf8&serverTimezone=PRC&allowMultiQueries=true&allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: lucky
      ds1: !!org.apache.commons.dbcp.BasicDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://119.91.148.176:3306/lucky?useUnicode=true&characterEncoding=utf8&serverTimezone=PRC&allowMultiQueries=true&allowPublicKeyRetrieval=true&useSSL=false
        username: root
        password: lucky
    shardingRule:
      tables:
        t_user:
          actualDataNodes: ds${0..1}.t_user${0..1}
          databaseStrategy:
            inline:
              shardingColumn: id
              algorithmExpression: ds${id % 2}
          tableStrategy:
            inline:
              shardingColumn: id
              algorithmExpression: t_user${order_id % 2}
          keyGenerator:
            type: SNOWFLAKE
            column: id

#      bindingTables:
#        - t_order,t_order_item
#      broadcastTables:
#        - t_config
#
#      defaultDataSourceName: ds0
#      defaultTableStrategy:
#        none:
#      defaultKeyGenerator:
#        type: SNOWFLAKE
#        column: order_id
#
#    props:
#      sql.show: true